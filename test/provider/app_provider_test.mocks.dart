// Mocks generated by Mockito 5.1.0 from annotations
// in restaurant/test/provider/app_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant/data/api/api_service.dart' as _i5;
import 'package:restaurant/data/models/restaurant_detail_response.dart' as _i4;
import 'package:restaurant/data/models/restaurant_response.dart' as _i2;
import 'package:restaurant/data/models/search_restaurant_response.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRestaurantResponse_0 extends _i1.Fake
    implements _i2.RestaurantResponse {}

class _FakeSearchRestaurantResponse_1 extends _i1.Fake
    implements _i3.SearchRestaurantResponse {}

class _FakeRestaurantDetailModel_2 extends _i1.Fake
    implements _i4.RestaurantDetailModel {}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.RestaurantResponse> getList() => (super.noSuchMethod(
          Invocation.method(#getList, []),
          returnValue:
              Future<_i2.RestaurantResponse>.value(_FakeRestaurantResponse_0()))
      as _i6.Future<_i2.RestaurantResponse>);
  @override
  _i6.Future<_i3.SearchRestaurantResponse> searchRestaurant(
          {String? query = r''}) =>
      (super.noSuchMethod(
              Invocation.method(#searchRestaurant, [], {#query: query}),
              returnValue: Future<_i3.SearchRestaurantResponse>.value(
                  _FakeSearchRestaurantResponse_1()))
          as _i6.Future<_i3.SearchRestaurantResponse>);
  @override
  _i6.Future<_i4.RestaurantDetailModel> getDetail(String? id) =>
      (super.noSuchMethod(Invocation.method(#getDetail, [id]),
              returnValue: Future<_i4.RestaurantDetailModel>.value(
                  _FakeRestaurantDetailModel_2()))
          as _i6.Future<_i4.RestaurantDetailModel>);
}
